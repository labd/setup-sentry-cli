name: Tests
on:
  push:
    branches: [main, v2]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  checks:
    name: Run checks
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        script:
          - lint
          - format:check
          - depcheck
          - typecheck
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile
      - name: Run the script
        run: pnpm run ${{ matrix.script }}

  integration:
    name: Test Sentry Integration
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - macos-11
          - macos-12
          - windows-2019
          - windows-2022
        version: [latest, 1.58.0]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Sentry CLI
        uses: ./
        with:
          version: ${{ matrix.version }}
          url: ${{ secrets.SENTRY_URL }}
          token: ${{ secrets.SENTRY_TOKEN }}
          organization: ${{ secrets.SENTRY_ORGANIZATION }}
          project: ${{ secrets.SENTRY_PROJECT }}
      - name: Display Sentry CLI info
        run: |
          sentry-cli --help
          sentry-cli info
      - name: Deploy Sentry release
        if: matrix.os == 'ubuntu-20.04' && matrix.version == 'latest' # do not duplicate releases
        run: |
          VERSION=$(sentry-cli releases propose-version)
          sentry-cli releases new "$VERSION"
          sentry-cli releases set-commits "$VERSION" --auto || true
          sentry-cli releases files "$VERSION" upload-sourcemaps ./dist \
            --rewrite \
            --ext map \
            --validate \
            --verbose \
            --strip-common-prefix
          sentry-cli releases finalize "$VERSION"
      - name: Send Sentry test event
        if: "!contains(matrix.os, 'win')"
        run: |
          sentry-cli send-event \
            --release="$VERSION" \
            --fingerprint="GH-DEMO" \
            --message="Hello from GitHub Actions" \
            --level=debug
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
